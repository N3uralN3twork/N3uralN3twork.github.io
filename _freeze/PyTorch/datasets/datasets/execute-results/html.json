{
  "hash": "ec814ae55295c3c31da5ac6ea23fedb2",
  "result": {
    "markdown": "---\ntitle: PyTorch Datasets\ndescription: This project serves as an introduction to PyTorch and working with datasets.\nauthor: Matthias Quinn\ndate: 02/14/2023\ncategories:\n  - code\n  - ML\nimage: Pytorch-Datasets-Logo.png\nimage-alt: PyTorch Datasets\nformat: html\nexecute:\n  cache: true\n---\n\n::: columns\n::: {.column width=\"40%\"}\n## GOAL\n\nLearn more about the Machine Learning framework known as PyTorch.\n:::\n\n::: {.column width=\"10%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"40%\"}\n## RESULT\n\nA better understanding of PyTorch and working with dataset functionality.\n:::\n:::\n\n## Datasets & DataLoaders\n\nPyTorch provides two data primitives:\n\n1.  `torch.utils.data.DataLoader`\n2.  `torch.utils.data.Dataset`\n\nThey both allow you to use pre-loaded datasets as well as your own. `Dataset` allows you to store the samples and the labels while `DataLoader` wraps an iterable around the `Dataset` to enable access to the samples.\n\nThere are a number of prepackaged datasets that come with PyTorch, like [FashionMNIST](https://pytorch.org/vision/stable/generated/torchvision.datasets.FashionMNIST.html), and more can be found here:\n\n-   [Image Datasets](https://pytorch.org/vision/stable/datasets.html)\n\n-   [Text Datasets](https://pytorch.org/text/stable/datasets.html)\n\n-   [Audio Datasets](https://pytorch.org/audio/stable/datasets.html)\n\n## How to Load a Dataset\n\nHere's how to load the Fashion-MNIST dataset from TorchVision. This dataset is a dataset of Zalando's article images consisting of $60,000$ training examples and $10,000$ test examples. Each example comprises of a $28 \\times 28$ greyscale image and an associated label from one of $10$ classes.\n\nWe'll load the FashionMNIST dataset with the following parameters:\n\n-   `root` = the path where the train/test datasets are stored\n\n-   `train` = specifies the training or test dataset\n\n-   `download` = downloads the dataset from the internet if it's not available on your computer\n\n-   `transform` = specifies the feature transformations to use, if requested\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport torch\nfrom torch.utils.data import Dataset\nfrom torchvision import datasets\nfrom torchvision.transforms import ToTensor\nimport matplotlib.pyplot as plt\n\n\ntraining_data = datasets.FashionMNIST(\n    root=\"data\",\n    train=True,\n    download=True,\n    transform=ToTensor()\n)\n\ntest_data = datasets.FashionMNIST(\n    root=\"data\",\n    train=False,\n    download=True,\n    transform=ToTensor()\n)\n```\n:::\n\n\n",
    "supporting": [
      "datasets_files"
    ],
    "filters": [],
    "includes": {}
  }
}